/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Cactoro.gltf -o src/components/Cactus.jsx -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export default function Cactus({ hovered, ...props }) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/Cactoro.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  console.log(actions)

  useEffect(() => {
    const anim = hovered ? "Wave" : "Idle"
    actions[anim].reset().fadeIn(0.5).play()
    return () => actions[anim].fadeOut(0.5)
  }, [hovered])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <skinnedMesh name="Cactoro" geometry={nodes.Cactoro.geometry} material={materials.Atlas} skeleton={nodes.Cactoro.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Cactoro.gltf')
